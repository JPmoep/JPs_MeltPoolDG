# Listing of Parameters
# ---------------------
subsection adaptive meshing
  # Sets this parameter to true to activate adaptive meshing
  set do amr                    = false

  # Defines the (lower) percentage of elements that should be coarsened
  set lower perc to coarsen     = 0

  # Defines the number of maximum refinement steps one grid cell will be
  # undergone.
  set max grid refinement level = 12

  # Defines the (upper) percentage of elements that should be refined
  set upper perc to refine      = 0
end


subsection advection diffusion
  # Defines the diffusivity for the advection diffusion equation
  set advec diff diffusivity     = 0

  # Set this parameter if a matrix free solution procedure should be
  # performed
  set advec diff do matrix free  = false

  # Defines if the l2norm of the advected field should be printed).
  set advec diff do print l2norm = true

  # Sets the end time for the solution of the advection diffusion problem
  set advec diff end time        = 1

  # Defines the start time for the solution of the levelset problem
  set advec diff start time      = 0

  # Sets the theta value for the time stepping scheme: 0=explicit euler;
  # 1=implicit euler; 0.5=Crank-Nicholson;
  set advec diff theta           = 0.5

  # Sets the step size for time stepping. For non-uniform time stepping, this
  # parameter determines the size of the first time step.
  set advec diff time step size  = 0.01
end


subsection base
  # Sets the base name for the application that will be fed to the problem
  # type.
  set application name   = none

  # Defines the interpolation degree
  set degree             = 1

  # Defines the dimension of the problem
  set dimension          = 2

  # Defines the number of initial global refinements
  set global refinements = 6         # default: 1

  # Defines the number of quadrature points
  set n q points 1d      = -1

  # Sets the base name for the problem that should be solved.
  set problem name       = level_set # default: none
end


subsection curvature
  # curvature computation: damping = cell_size * curv_damping_scale_factor
  set curv damping scale factor = 0

  # Set this parameter if a matrix free solution procedure should be
  # performed
  set curv do matrix free       = false

  # Defines if the l2norm of the curvature result should be printed)
  set curv do print l2norm      = true
end


subsection levelset
  # Defines the artificial diffusivity for the level set transport equation
  set ls artificial diffusivity = 0.0   # default: 0

  # Set this parameter if a matrix free solution procedure should be
  # performed
  set ls do matrix free         = true  # default: false

  # Defines if the l2norm of the levelset result should be printed)
  set ls do print l2norm        = true  # default: false

  # Defines if reinitialization of level set function is activated
  set ls do reinitialization    = true  # default: false

  # Enables to dynamically adapt the time step to meet the CFL condition in
  # case of explicit time integration (theta=0)
  set ls enable CFL condition   = false

  # Sets the end time for the solution of the levelset problem
  set ls end time               = 0.05  # default: 1

  # Defines the start time for the solution of the levelset problem
  set ls start time             = 0.0   # default: 0

  # Sets the theta value for the time stepping scheme (0=explicit euler;
  # 1=implicit euler; 0.5=Crank-Nicholson
  set ls theta                  = 0.5

  # Sets the step size for time stepping. For non-uniform time stepping, this
  # parameter determines the size of the first time step.
  set ls time step size         = 0.01
end


subsection normal vector
  # normal vector computation: damping = cell_size *
  # normal_vec_damping_scale_factor
  set normal vec damping scale factor = 0.5

  # Set this parameter if a matrix free solution procedure should be
  # performed
  set normal vec do matrix free       = true # default: false

  # Defines if the l2norm of the normal vector result should be printed)
  set normal vec do print l2norm      = true
end


subsection output
  # this flag enables the computation of the error compared to a given
  # analytical solution.
  set do compute error         = false

  # boolean for computing the phase volumes
  set do compute volume output = false

  # this flag enables the output of wall times (should be disabled if a test
  # file is prepared)
  set do walltime              = false

  # Sets the base name for the volume fraction file output.
  set filename volume output   = my_volumes.txt
end


subsection paraview
  # boolean for writing the initial state into the paraview output file
  set paraview do initial state    = true

  # boolean for producing paraview output files
  set paraview do output           = false

  # Sets the base name for the paraview file output.
  set paraview filename            = solution

  # number of digits for the frame number of the vtk-file.
  set paraview n digits timestep   = 4

  # number of parallel written vtk-files.
  set paraview n groups            = 4

  # boolean for writing the computed advection into the paraview output file
  set paraview print advection     = false

  # boolean for printing a vtk-file with the boundary id
  set paraview print boundary id   = false

  # boolean for writing the computed curvature into the paraview output file
  set paraview print curvature     = false

  # boolean for writing the exact solution into the paraview output file
  set paraview print exactsolution = false

  # boolean for writing the levelset variable into the paraview output file
  set paraview print levelset      = true

  # boolean for writing the computed normalvector into the paraview output
  # file
  set paraview print normal vector = false

  # every n timestep that should be written
  set paraview write frequency     = 1
end


subsection reinitialization
  # Defines the length parameter of the level set function to be constant
  # andnot to dependent on the mesh size (default: -1.0 i.e. grid size
  # dependentwhich can be controlled by reinit_epsilon_scale_factor
  set reinit constant epsilon     = -1

  # Set this parameter if a matrix free solution procedure should be
  # performed
  set reinit do matrix free       = true       # default: false

  # Defines if the l2norm of the reinitialization result should be printed)
  set reinit do print l2norm      = true       # default: false

  # Defines the time step size of the reinitialization to be constant andnot
  # to dependent on the mesh size (default: -1.0 i.e. grid size dependent
  set reinit dtau                 = -1

  # Sets the maximum number of reinitialization steps
  set reinit max n steps          = 5

  # Sets the type of reinitialization model that should be used.
  set reinit modeltype            = olsson2007

  # Defines the scaling factor of the diffusion parameter in the
  # reinitialization equation; the scaling factor is multipled by the mesh
  # size (default: 0.5 i.e. eps=0.5*h_min
  set reinit scale factor epsilon = 0.5
end


| normal vector:         i=75 	|n_0| = 66.676542028   |n_1| = 67.433582103   
    | reini: τ= 0.015625  | CG: i=15   	 |ΔΨ|∞ = 0.5026334154    |ΔΨ|²/dT = 205.6335667    |
    | reini: τ= 0.03125   | CG: i=15   	 |ΔΨ|∞ = 0.2908769635    |ΔΨ|²/dT = 112.6372295    |
    | reini: τ= 0.046875  | CG: i=15   	 |ΔΨ|∞ = 0.152334047     |ΔΨ|²/dT = 57.32005499    |
    | reini: τ= 0.0625    | CG: i=15   	 |ΔΨ|∞ = 0.0747426334    |ΔΨ|²/dT = 28.63013349    |
    | reini: τ= 0.078125  | CG: i=15   	 |ΔΨ|∞ = 0.03659823533   |ΔΨ|²/dT = 14.61332635    |
| ls: t= 0.01      | GMRES: i=63   	 |ϕ|2 = 64.34622011    
| normal vector:         i=76 	|n_0| = 64.774748639   |n_1| = 65.570096754   
    | reini: τ= 0.015625  | CG: i=16   	 |ΔΨ|∞ = 0.04044622019   |ΔΨ|²/dT = 13.68029926    |
    | reini: τ= 0.03125   | CG: i=15   	 |ΔΨ|∞ = 0.01984771619   |ΔΨ|²/dT = 7.054920339    |
    | reini: τ= 0.046875  | CG: i=16   	 |ΔΨ|∞ = 0.01400367264   |ΔΨ|²/dT = 3.982477456    |
    | reini: τ= 0.0625    | CG: i=16   	 |ΔΨ|∞ = 0.01044447896   |ΔΨ|²/dT = 2.486308383    |
    | reini: τ= 0.078125  | CG: i=16   	 |ΔΨ|∞ = 0.008151955222  |ΔΨ|²/dT = 1.720368035    |
| normal vector:         i=76 	|n_0| = 64.66908694    |n_1| = 65.467596037   
| curvature:         i=31 	|k| = 1581.82507     
| ls: t= 0.02      | GMRES: i=63   	 |ϕ|2 = 64.31631472    
| normal vector:         i=76 	|n_0| = 64.667701739   |n_1| = 65.451178473   
    | reini: τ= 0.015625  | CG: i=15   	 |ΔΨ|∞ = 0.03294601069   |ΔΨ|²/dT = 9.406049869    |
    | reini: τ= 0.03125   | CG: i=16   	 |ΔΨ|∞ = 0.0174736792    |ΔΨ|²/dT = 4.821091467    |
    | reini: τ= 0.046875  | CG: i=16   	 |ΔΨ|∞ = 0.01086051454   |ΔΨ|²/dT = 2.636247078    |
    | reini: τ= 0.0625    | CG: i=16   	 |ΔΨ|∞ = 0.007273291979  |ΔΨ|²/dT = 1.624510402    |
    | reini: τ= 0.078125  | CG: i=16   	 |ΔΨ|∞ = 0.005350769407  |ΔΨ|²/dT = 1.165240077    |
| normal vector:         i=76 	|n_0| = 64.655838007   |n_1| = 65.440250777   
| curvature:         i=31 	|k| = 1583.0688439   
| ls: t= 0.03      | GMRES: i=63   	 |ϕ|2 = 64.31283038    
| normal vector:         i=76 	|n_0| = 64.65357097    |n_1| = 65.413533314   
    | reini: τ= 0.015625  | CG: i=15   	 |ΔΨ|∞ = 0.02919193181   |ΔΨ|²/dT = 8.799497048    |
    | reini: τ= 0.03125   | CG: i=15   	 |ΔΨ|∞ = 0.0160180572    |ΔΨ|²/dT = 4.498513634    |
    | reini: τ= 0.046875  | CG: i=16   	 |ΔΨ|∞ = 0.008514679164  |ΔΨ|²/dT = 2.395799682    |
    | reini: τ= 0.0625    | CG: i=16   	 |ΔΨ|∞ = 0.006292329313  |ΔΨ|²/dT = 1.409839379    |
    | reini: τ= 0.078125  | CG: i=16   	 |ΔΨ|∞ = 0.004803945345  |ΔΨ|²/dT = 0.9709525552   |
| normal vector:         i=76 	|n_0| = 64.652267425   |n_1| = 65.413051758   
| curvature:         i=31 	|k| = 1586.2367942   
| ls: t= 0.04      | GMRES: i=63   	 |ϕ|2 = 64.31233948    
| normal vector:         i=76 	|n_0| = 64.649284773   |n_1| = 65.37689263    
    | reini: τ= 0.015625  | CG: i=15   	 |ΔΨ|∞ = 0.03238823773   |ΔΨ|²/dT = 8.835225769    |
    | reini: τ= 0.03125   | CG: i=15   	 |ΔΨ|∞ = 0.01652724403   |ΔΨ|²/dT = 4.387438759    |
    | reini: τ= 0.046875  | CG: i=15   	 |ΔΨ|∞ = 0.008895208202  |ΔΨ|²/dT = 2.240266091    |
    | reini: τ= 0.0625    | CG: i=16   	 |ΔΨ|∞ = 0.005284716334  |ΔΨ|²/dT = 1.223270182    |
    | reini: τ= 0.078125  | CG: i=16   	 |ΔΨ|∞ = 0.003542701353  |ΔΨ|²/dT = 0.7671948075   |
| normal vector:         i=76 	|n_0| = 64.648920327   |n_1| = 65.377649837   
| curvature:         i=31 	|k| = 1580.5391837   
| ls: t= 0.05      | GMRES: i=63   	 |ϕ|2 = 64.31225789    
| normal vector:         i=76 	|n_0| = 64.645439951   |n_1| = 65.333183151   
    | reini: τ= 0.015625  | CG: i=15   	 |ΔΨ|∞ = 0.03080435662   |ΔΨ|²/dT = 8.815613932    |
    | reini: τ= 0.03125   | CG: i=15   	 |ΔΨ|∞ = 0.01338396973   |ΔΨ|²/dT = 4.361962707    |
    | reini: τ= 0.046875  | CG: i=15   	 |ΔΨ|∞ = 0.007615139512  |ΔΨ|²/dT = 2.18312601     |
    | reini: τ= 0.0625    | CG: i=15   	 |ΔΨ|∞ = 0.004495028241  |ΔΨ|²/dT = 1.13869479     |
    | reini: τ= 0.078125  | CG: i=16   	 |ΔΨ|∞ = 0.002767452946  |ΔΨ|²/dT = 0.6619563221   |
| normal vector:         i=76 	|n_0| = 64.644881004   |n_1| = 65.334129696   
| curvature:         i=31 	|k| = 1581.4332202   
